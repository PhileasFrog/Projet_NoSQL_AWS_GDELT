{"paragraphs":[{"text":"import org.apache.spark.sql.functions._\nimport scala.collection.mutable.ArrayBuffer\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions._\nimport scala.collection.mutable.ArrayBuffer\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n"}]},"apps":[],"jobName":"paragraph_1611699877527_-634362664","id":"20210114-202121_136172096","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:384"},{"text":"def DataFile(directory :String)={\n    val data = sc.binaryFiles(directory).\n      flatMap { // decompresser les fichiers\n        case (name: String, content: PortableDataStream) =>\n        val zis = new ZipInputStream(content.open)\n      Stream.continually(zis.getNextEntry).\n        takeWhile{ case null => zis.close(); false\n        case _ => true }.\n        flatMap { _ =>\n          val br = new BufferedReader(new InputStreamReader(zis))\n          Stream.continually(br.readLine()).takeWhile(_ != null)}\n          \n      }\n    data\n    }\n\ndef language(tmp: String) : String ={\n    if (tmp == \"\") {\n        \"eng\"\n    } \n    else {\n      tmp.split(\";\")(0).takeRight(3)  \n    }\n    \n}\n\nval language_udf = udf(language _)","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFile: (directory: String)org.apache.spark.rdd.RDD[String]\nLanguage: (tmp: String)String\nLanguagesUDF: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,StringType,Some(List(StringType)))\n"}]},"apps":[],"jobName":"paragraph_1611699877545_1226077753","id":"20210116-211833_111367244","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:385"},{"text":"// A modifier pour rediriger vers bucket S3 du compte AWS\n// val DIRS3PERSO=\"premierbuckerdom1012\" //Dominique\nval DIRS3PERSO=\"bcobucket-telecom-2020\" //Bertrand\n//val DIRS3PERSO=\"thomas-trivellato-gdelt2020\" //Tom\n//val DIRS3PERSO=\"rob-nob-telecom-gdelt2020\" //Roberto","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DIRS3PERSO: String = bcobucket-telecom-2020\n"}]},"apps":[],"jobName":"paragraph_1611699877549_894547654","id":"20210119-212848_913043879","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:386"},{"text":"// Déclaration des chemins dans S3\n\nval DIR_zips = \"s3://\" + DIRS3PERSO + \"/zips/\" \nval DATE_files = \"202004*\" // Filtre pour test pour passage à l'échelle\nval PATH_files = DIR_zips + DATE_files\nval DIR_Parquet = \"s3://\" + DIRS3PERSO + \"/parquets/\"\n\n","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DIR_zips: String = s3://bcobucket-telecom-2020/zips/\nDATE_files: String = 202004*\nPATH_files: String = s3://bcobucket-telecom-2020/zips/202004*\nDIR_Parquet: String = s3://bcobucket-telecom-2020/parquets/\n"}]},"apps":[],"jobName":"paragraph_1611699877555_-75787532","id":"20210116-212115_1461421196","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:387"},{"text":"// Récupération de zip en RDD\n\nval gkgRDD = DataFile(PATH_files + \".gkg.csv.zip\")\nval eventRDD = DataFile(PATH_files + \".export.CSV.zip\")\nval mentionsRDD = DataFile(PATH_files + \".mentions.CSV.zip\")","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"gkgRDD: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[305] at flatMap at <console>:49\neventRDD: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[307] at flatMap at <console>:49\nmentionsRDD: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[309] at flatMap at <console>:49\n"}]},"apps":[],"jobName":"paragraph_1611699877559_570791231","id":"20210116-212206_1239265297","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:388"},{"text":"%md\n## Construction des 3 dataframes pour toutes les queries","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Construction des 3 dataframes pour toutes les queries</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1611699877563_1544010012","id":"20210116-213821_818735155","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:389"},{"text":"val gkg_all = gkgRDD.toDF. \nwithColumn(\"dategkg\",split($\"value\",\"\\\\t\").getItem(1)).\nwithColumn(\"sourcecommonname\",split($\"value\",\"\\\\t\").getItem(3)).\nwithColumn(\"mentionid\",split($\"value\",\"\\\\t\").getItem(4)).\nwithColumn(\"theme\",split(lower($\"value\"),\"\\\\t\").getItem(7)).\nwithColumn(\"locations\", split($\"value\", \"\\\\t\").getItem(9)).\nwithColumn(\"persons\", split($\"value\", \"\\\\t\").getItem(11)).\nwithColumn(\"tone\", split($\"value\", \"\\\\t\").getItem(15)).\nfilter(upper($\"theme\").contains(\"COVID\")||upper($\"theme\").contains(\"CORONAVIRUS\")).\ndrop(\"value\")\n\nval mentions_all = mentionsRDD.toDF.\nwithColumn(\"globaleventid\", split($\"value\", \"\\\\t\").getItem(0).cast(\"Int\")).\nwithColumn(\"day_mention\", split($\"value\", \"\\\\t\").getItem(2)).\nwithColumn(\"mentionid\", split($\"value\", \"\\\\t\").getItem(5)).\nwithColumn(\"langue\",split($\"value\",\"\\\\t\").getItem(14)).\ndrop(\"value\")\n\nval event_all = eventRDD.toDF.\nwithColumn(\"globaleventid\", split($\"value\", \"\\\\t\").getItem(0).cast(\"Int\")).\nwithColumn(\"date\", split($\"value\", \"\\\\t\").getItem(1).cast(\"Int\")).\nwithColumn(\"monthyear\", split($\"value\", \"\\\\t\").getItem(2).cast(\"Int\")).\nwithColumn(\"year\", split($\"value\", \"\\\\t\").getItem(3).cast(\"Int\")).\nwithColumn(\"paysaction\", split($\"value\", \"\\\\t\").getItem(53)).\ndrop(\"value\")\n\n","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"gkgDF_all: org.apache.spark.sql.DataFrame = [dategkg: string, sourcecommonname: string ... 5 more fields]\nmentionsDF_all: org.apache.spark.sql.DataFrame = [globaleventid: int, day_mention: string ... 2 more fields]\neventDF_all: org.apache.spark.sql.DataFrame = [globaleventid: int, date: int ... 3 more fields]\n"}]},"apps":[],"jobName":"paragraph_1611699877566_-508584837","id":"20210116-212740_32546234","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:390"},{"text":"// gkg_all.show()","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877573_71548969","id":"20210120-215531_1334137219","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:391"},{"text":"%md\n# Construction des dataframes pour Query 1\n## Afficher le nombre d’articles/évènements qui parlent de COVID qu’il y a eu pour chaque triplet (jour, pays de l’évènement, langue de l’article).","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Construction des dataframes pour Query 1</h1>\n<h2>Afficher le nombre d’articles/évènements qui parlent de COVID qu’il y a eu pour chaque triplet (jour, pays de l’évènement, langue de l’article).</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1611699877577_-876453159","id":"20210114-214202_2078175595","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:392"},{"text":"%md\nOn va commencer par filtrer sur les données de gkg via la colonne theme. On utilise ensuite la colonne avec l'url de l'article comme clef étrangère pour jointure avec la table mention. On pourra ensuite voir pour chaque article l'évenement cité. On récupère le pays et la date de l'évenement dans la table events via jointure sur globaleventid","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>On va commencer par filtrer sur les données de gkg via la colonne theme. On utilise ensuite la colonne avec l&rsquo;url de l&rsquo;article comme clef étrangère pour jointure avec la table mention. On pourra ensuite voir pour chaque article l&rsquo;évenement cité. On récupère le pays et la date de l&rsquo;évenement dans la table events via jointure sur globaleventid</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1611699877583_1223592006","id":"20210117-120921_723508652","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:393"},{"text":"%md\nQuery1","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Query1</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1611699877588_1238753573","id":"20210116-213047_777635428","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:394"},{"text":"// Pour la Query comme on a déjà filtré sur le thème pour Covid et que gkgid et mentionid sont unique on ne sélectionne que mentionid pour faire la jointure\n\nval gkg = gkg_all.select(\"mentionid\")\n//gkg.head()\n//gkg.select(gkg.columns.map(c => countDistinct(col(c)).alias(c)): _*).show // pour faire un count des valeur unique par colonne\n\nval mentions = mentions_all.select(\"mentionid\",\"globaleventid\",\"langue\",\"day_mention\").\nwithColumn(\"langue\",language_udf($\"langue\"))\n//mentions.head()\n// mentions.printSchema\n\nval events = event_all.select(\"globaleventid\",\"date\",\"paysaction\").\nfilter($\"paysaction\"!==\"\") // il y a des lignes vides non informées on les enlèves dès l'import\n//events.head()\n// events.printSchema\n//events.select(events.columns.map(c => countDistinct(col(c)).alias(c)): _*).show */","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"gkg: org.apache.spark.sql.DataFrame = [mentionid: string]\nmentions: org.apache.spark.sql.DataFrame = [mentionid: string, globaleventid: int ... 2 more fields]\nwarning: there was one deprecation warning; re-run with -deprecation for details\nevents: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [globaleventid: int, date: int ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1611699877592_1465170964","id":"20210114-202204_1320826212","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:395"},{"text":"// Jointure GKG MENTIONS on fait la jointure sur mentionid l'identifiant du document article\nval q1_join_mentiongkg = mentions.join(gkg, Seq(\"mentionid\"),\"inner\")\n//q1_join_mentiongkg.show(3)\n//q1_join_mentiongkg.select(q1_join_mentiongkg.columns.map(c => countDistinct(col(c)).alias(c)): _*).show // pour faire un count des valeur unique par colonne","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dfq1_join_mentiongkg: org.apache.spark.sql.DataFrame = [mentionid: string, globaleventid: int ... 2 more fields]\n"}]},"apps":[],"jobName":"paragraph_1611699877596_-219949210","id":"20210114-204338_1479665659","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:396"},{"text":"// Jointure MENTIONS EVENTS\n\nval q1_join_eventmention = events.join(q1_join_mentiongkg, Seq(\"globaleventid\"),\"inner\")\n//q1_join_eventmention.show(3)\n//q1_join_eventmention.select(q1_join_eventmention.columns.map(c => countDistinct(col(c)).alias(c)): _*).show // pour faire un count des valeur unique par colonne","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":87.45,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dfq1_join_eventmention: org.apache.spark.sql.DataFrame = [globaleventid: int, date: int ... 4 more fields]\n"}]},"apps":[],"jobName":"paragraph_1611699877600_-995077489","id":"20210114-222745_1115949304","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:397"},{"text":"// Création du dataframe correspondant à la requête attendue 1\n\nval query1 = q1_join_eventmention.\n    groupBy(\"date\",\"paysaction\",\"langue\"). // pour query 1\n    agg(countDistinct($\"globaleventid\").alias(\"num_event\"),countDistinct($\"mentionid\").alias(\"num_article\")). // calcul du nombre d'event et article\n    withColumn(\"num_event\",$\"num_event\".cast(\"Int\")). // sinon pris en long\n    withColumn(\"num_article\",$\"num_article\".cast(\"Int\")).// sinon pris en long\n    na.drop()\n\n//query1.show(100)","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df_q1: org.apache.spark.sql.DataFrame = [date: int, paysaction: string ... 3 more fields]\n"}]},"apps":[],"jobName":"paragraph_1611699877604_521441756","id":"20210114-222141_1725173263","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:398"},{"text":"//query1.select(df_q1.columns.map(c => countDistinct(col(c)).alias(c)): _*).show\n//query1.printSchema","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877609_1625185853","id":"20210115-232949_1752508653","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:399"},{"text":"\nimport com.datastax.spark.connector.cql.CassandraConnector\nimport org.apache.spark.sql.cassandra._\nimport org.apache.spark.sql.SaveMode\n//import com.datastax.spark.connector.types._\n//import org.apache.spark.sql.catalyst\n//Export en parquet import de librairie","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import com.datastax.spark.connector.cql.CassandraConnector\nimport org.apache.spark.sql.cassandra._\nimport org.apache.spark.sql.SaveMode\n"}]},"apps":[],"jobName":"paragraph_1611699877613_1724203893","id":"20210120-220623_695043634","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:400"},{"text":"// query1.write.mode(SaveMode.Overwrite).parquet(DIR_Parquet + \"query1.parquet\") // a ne pas décommenter une fois test ok","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877617_-1120046530","id":"20210116-204424_468738577","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:401"},{"text":"//Rechargement en parquet si option sélectionné par l'équipe\n// val query1_parquet=spark.read.parquet(DIR_Parquet + \"query1.parquet\")","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877621_1437896452","id":"20210116-221756_288502152","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:402"},{"text":"CassandraConnector(sc.getConf).withSessionDo { session =>\n// session.execute(\"DROP KEYSPACE gdelt\")\nsession.execute(\"CREATE KEYSPACE IF NOT EXISTS gdelt WITH REPLICATION = {'class': 'SimpleStrategy', 'replication_factor': 3 }\") \nsession.execute(\"CREATE TABLE IF NOT EXISTS gdelt.table_q1(date int , paysaction text, langue text, num_event int, num_article int, PRIMARY KEY (date, paysaction, langue))\")\n}","user":"anonymous","dateUpdated":"2021-01-26T22:29:12+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res220: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1611699877625_-1212034229","id":"20210120-223949_1568041941","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:403"},{"text":"// Export du dataframe dans la table Cassandra choisir si usage parquet ou non\n\nquery1.write.cassandraFormat(\"table_q1\",\"gdelt\").mode(SaveMode.Append).save() //\n//query1_parquet.write.cassandraFormat(\"table_q1\",\"gdelt\").mode(SaveMode.Append).save() // si utilisation backup parquet","user":"anonymous","dateUpdated":"2021-01-26T22:29:24+0000","config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{"0":{"graph":{"mode":"table","height":354,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877630_148645603","id":"20210115-234227_361986203","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:404"},{"text":"// val reload_query1 = spark.read.\n//       cassandraFormat(\"table_q1\", \"gdelt\").\n//       load()\n\n// reload_query1.count\n\n// reload_query1.createOrReplaceTempView(\"vue_q1\")","user":"anonymous","dateUpdated":"2021-01-26T22:33:44+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877634_-2004477910","id":"20210116-193839_1388787024","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:405"},{"text":"// reload_query1.show()","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877639_1348873432","id":"20210119-222957_1409718940","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:406"},{"text":"// z.show(spark.sql(\"\"\"SELECT  num_event,num_article,paysaction \n//                     FROM vue_q1 \n//                     WHERE date=\"20200410\" \n//                     AND langue=\"eng\"\n//                                         \"\"\"))","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"num_event":"string","num_article":"string","paysaction":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","stacked":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"pieChart":{},"scatterChart":{"xAxis":{"name":"paysaction","index":2,"aggr":"sum"},"yAxis":{"name":"num_article","index":1,"aggr":"sum"},"size":{"name":"num_event","index":0,"aggr":"sum"}}},"keys":[{"name":"paysaction","index":2,"aggr":"sum"}],"groups":[],"values":[{"name":"num_article","index":1,"aggr":"sum"}],"commonSetting":{}},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877641_1943554940","id":"20210116-195448_421797379","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:407"},{"text":"%md\n# Query 2 \n## Pour un pays donné en paramètre, affichez les évènements qui y ont eu place triées par le nombre de mentions (tri décroissant); permettez une agrégation par jour/mois/année","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Query 2</h1>\n<h2>Pour un pays donné en paramètre, affichez les évènements qui y ont eu place triées par le nombre de mentions (tri décroissant); permettez une agrégation par jour/mois/année</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1611699877643_29360173","id":"20210116-221225_2079436676","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:408"},{"text":"%md\n#### les datframes gkg et mention sont identiques.","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>les datframes gkg et mention sont identiques.</h4>\n</div>"}]},"apps":[],"jobName":"paragraph_1611699877644_2025805016","id":"20210117-121304_1054138952","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:409"},{"text":"val query2_raw = q1_join_eventmention.\nwithColumn(\"mois\",$\"date\".substr(5,2)).\nwithColumn(\"annee\",$\"date\".substr(0,4)).\nwithColumn(\"jour\",$\"date\".substr(7,2)) \n\n//query2_raw.show()","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df_q2_raw: org.apache.spark.sql.DataFrame = [globaleventid: int, date: int ... 7 more fields]\n"}]},"apps":[],"jobName":"paragraph_1611699877646_371079271","id":"20210124-132804_57154767","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:410"},{"text":"val query2 = query2_raw.\n    groupBy(\"paysaction\",\"globaleventid\",\"annee\",\"mois\",\"jour\"). \n    agg(count($\"mentionid\").alias(\"num_article\")).\n    na.drop()\n\n//query2.show(4)","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df_q2: org.apache.spark.sql.DataFrame = [paysaction: string, globaleventid: int ... 4 more fields]\n"}]},"apps":[],"jobName":"paragraph_1611699877648_-1773668945","id":"20210116-224655_1361579703","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:411"},{"text":"//Export en parquet\n// query2.write.mode(SaveMode.Overwrite).parquet(DIR_Parquet + \"query2.parquet\") ","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877649_1321690571","id":"20210118-175702_196792973","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:412"},{"text":"//Rechargement en parquet si option sélectionné par l'équipe\n// val query2_parquet=spark.read.parquet(DIR_Parquet + \"query2.parquet\")","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877651_-525083929","id":"20210120-232929_1360726099","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:413"},{"text":"CassandraConnector(sc.getConf).withSessionDo { session =>\n// session.execute(\"DROP KEYSPACE gdelt\")\n// session.execute(\"DROP TABLE gdelt.table_q2\")\nsession.execute(\"CREATE KEYSPACE IF NOT EXISTS gdelt WITH REPLICATION = {'class': 'SimpleStrategy', 'replication_factor': 3 }\") \nsession.execute(\"CREATE TABLE IF NOT EXISTS gdelt.table_q2(globaleventid int , paysaction text,  annee int, mois int, jour int, num_article int,  PRIMARY KEY (paysaction, annee , mois , jour ,globaleventid))\")\n}\n\n//query2_parquet.write.cassandraFormat(\"table_q2\",\"gdelt\").mode(SaveMode.Append).save()\nquery2.write.cassandraFormat(\"table_q2\",\"gdelt\").mode(SaveMode.Append).save()\n","user":"anonymous","dateUpdated":"2021-01-26T22:29:48+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res250: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1611699877652_-1373382893","id":"20210118-171545_1996795651","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:414"},{"text":"// val reload_query2 = spark.read.\n//       cassandraFormat(\"table_q2\", \"gdelt\").\n//       load()\n      \n// reload_query2.count\n      \n// reload_query2.createOrReplaceTempView(\"vue_q2\")","user":"anonymous","dateUpdated":"2021-01-26T22:30:00+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877655_-859288735","id":"20210118-190411_1248160926","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:415"},{"text":"// z.show(spark.sql(\"\"\"SELECT paysaction ,globaleventid ,annee, mois,jour ,num_article \n//                     FROM vue_q2\n//                     WHERE paysaction=\"FR\"\n//                     ORDER BY num_article DESC \n//                                         \"\"\"))","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"paysaction":"string","globaleventid":"string","day_mention":"string","num_article":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"paysaction","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"globaleventid","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877659_-2136267055","id":"20210118-192747_1520267025","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:416"},{"text":"%md\n# Query 3\n## Pour une source de donnés passée en paramètre (gkg.SourceCommonName) affichez les thèmes, personnes, lieux dont les articles de cette source parlent ainsi que le le nombre d’articles et le ton moyen des articles (pour chaque thème/personne/lieu); permettez une agrégation par jour/mois/année.","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Query 3</h1>\n<h2>Pour une source de donnés passée en paramètre (gkg.SourceCommonName) affichez les thèmes, personnes, lieux dont les articles de cette source parlent ainsi que le le nombre d’articles et le ton moyen des articles (pour chaque thème/personne/lieu); permettez une agrégation par jour/mois/année.</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1611699877660_-398884002","id":"20210116-230341_1214303457","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:417"},{"text":"%md\n## Classement par sélection sur thème","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Classement par sélection sur thème</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1611699877662_1549157962","id":"20210120-234529_1159766909","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:418"},{"text":"val gkg_q3_theme= gkg_all.select(\"mentionid\", \"sourcecommonname\", \"theme\", \"tone\", \"dategkg\").\nfilter(!($\"sourcecommonname\".isNaN || $\"sourcecommonname\".isNull || $\"sourcecommonname\" === \"\")).\nwithColumn(\"theme\", explode(split($\"theme\", \";\"))).\nfilter(!($\"theme\".isNaN || $\"theme\".isNull || $\"theme\" === \"\")).\nwithColumn(\"tone\", substring_index($\"tone\", \",\", 1)).\nwithColumn(\"annee\", substring($\"dategkg\", 0, 4)).\nwithColumn(\"mois\", substring($\"dategkg\", 5, 2)).\nwithColumn(\"jour\", substring($\"dategkg\", 7, 2)).\ngroupBy(\"sourcecommonname\", \"annee\", \"mois\", \"jour\", \"theme\").  \nagg(count($\"mentionid\").alias(\"num_article\"),mean($\"tone\").alias(\"avg_tone\")).\nna.drop()\n\n\n\n// gkg_q3_theme.write.mode(SaveMode.Overwrite).parquet(DIR_Parquet + \"gkg_q3_theme.parquet\") // backup en parquet\n// val gkg_q3_theme_parquet = spark.read.parquet(DIR_Parquet + \"gkg_q3_theme.parquet\") // rechargement parquet backup","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"gkg_q3_theme: org.apache.spark.sql.DataFrame = [sourcecommonname: string, annee: string ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1611699877664_844901544","id":"20210116-230345_527513356","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:419"},{"text":"CassandraConnector(sc.getConf).withSessionDo { session =>\n//session.execute(\"DROP KEYSPACE gdelt\")\n// session.execute(\"DROP TABLE gdelt.table_q3_theme\")\nsession.execute(\"CREATE KEYSPACE IF NOT EXISTS gdelt WITH REPLICATION = {'class': 'SimpleStrategy', 'replication_factor': 3 }\")\nsession.execute(\"CREATE TABLE IF NOT EXISTS gdelt.table_q3_theme(sourcecommonname text, annee int, mois int, jour int, theme text, num_article int, avg_tone double, PRIMARY KEY (sourcecommonname, annee, mois, jour, theme))\")\n}\n\n//gkg_q3_theme_parquet.write.cassandraFormat(\"table_q3_theme\",\"gdelt\").mode(SaveMode.Append).save()\ngkg_q3_theme.write.cassandraFormat(\"table_q3_theme\",\"gdelt\").mode(SaveMode.Append).save()","user":"anonymous","dateUpdated":"2021-01-26T22:31:03+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res270: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1611699877665_1136463443","id":"20210120-230942_1846085557","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:420"},{"text":"// val reload_q3_theme = spark.read.\n//       cassandraFormat(\"table_q3_theme\",\"gdelt\").\n//       load()\n      \n// reload_q3_theme.count\n      \n// reload_q3_theme.createOrReplaceTempView(\"vue_q3_theme\")\n","user":"anonymous","dateUpdated":"2021-01-26T22:34:14+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877667_-1290646170","id":"20210118-194553_1700439984","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:421"},{"text":"val gkg_q3_person = gkg_all.\n    select(\"mentionid\", \"sourcecommonname\", \"persons\", \"tone\", \"dategkg\").\n    filter(!($\"sourcecommonname\".isNaN || $\"sourcecommonname\".isNull || $\"sourcecommonname\" === \"\")).\n    withColumn(\"person\", explode(split($\"persons\", \";\"))).\n    filter(!($\"person\".isNaN || $\"person\".isNull || $\"person\" === \"\")).\n    withColumn(\"tone\", substring_index($\"tone\", \",\", 1)).\n    withColumn(\"annee\", substring($\"dategkg\", 0, 4)).\n    withColumn(\"mois\", substring($\"dategkg\", 5, 2)).\n    withColumn(\"jour\", substring($\"dategkg\", 7, 2)).\n    groupBy(\"sourcecommonname\", \"annee\", \"mois\", \"jour\",\"person\").  \n    agg(count($\"mentionid\").alias(\"num_article\"),     \n        mean($\"tone\").alias(\"avg_tone\")).\n    na.drop()\n        \n// gkg_q3_person.write.mode(SaveMode.Overwrite).parquet(DIR_Parquet + \"gkg_q3_person.parquet\") // backup en parquet\n// val gkg_q3_person_parquet = spark.read.parquet(DIR_Parquet + \"gkg_q3_person.parquet\") // rechargement parquet backup","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"gkg_q3_person: org.apache.spark.sql.DataFrame = [sourcecommonname: string, annee: string ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1611699877669_1411597592","id":"20210116-232016_116242793","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:422"},{"text":"CassandraConnector(sc.getConf).withSessionDo { session =>\n//session.execute(\"DROP KEYSPACE gdelt\")\n// session.execute(\"DROP TABLE gdelt.table_q3_person\")\nsession.execute(\"CREATE KEYSPACE IF NOT EXISTS gdelt WITH REPLICATION = {'class': 'SimpleStrategy', 'replication_factor': 3 }\")\nsession.execute(\"CREATE TABLE IF NOT EXISTS gdelt.table_q3_person(sourcecommonname text, annee int, mois int, jour int, person text, num_article int, avg_tone double, PRIMARY KEY (sourcecommonname, annee, mois,jour,person))\")\n}\n\n//gkg_q3_person_parquet.write.cassandraFormat(\"table_q3_person\",\"gdelt\").mode(SaveMode.Append).save()\ngkg_q3_person.write.cassandraFormat(\"table_q3_person\",\"gdelt\").mode(SaveMode.Append).save()\n","user":"anonymous","dateUpdated":"2021-01-26T22:31:15+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res283: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1611699877670_-703506754","id":"20210120-230944_1273534319","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:423"},{"text":"// val reload_q3_person = spark.read.\n//       cassandraFormat(\"table_q3_person\",\"gdelt\").\n//       load()\n      \n// reload_q3_person.count\n      \n// reload_q3_person.createOrReplaceTempView(\"vue_q3_person\")","user":"anonymous","dateUpdated":"2021-01-26T22:31:26+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611699877672_2048752884","id":"20210124-145426_979692154","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:424"},{"text":"val gkg_q3_location = gkg_all.\n    select(\"mentionid\", \"sourcecommonname\", \"locations\", \"tone\", \"dategkg\").\n    filter(!($\"sourcecommonname\".isNaN || $\"sourcecommonname\".isNull || $\"sourcecommonname\" === \"\")).\n    withColumn(\"locations\", explode(split($\"locations\", \";\"))).\n    filter(!($\"locations\".isNaN || $\"locations\".isNull || $\"locations\" === \"\")).\n    withColumn(\"locationpays\", split($\"locations\", \"#\").getItem(1)).\n    withColumn(\"tone\", substring_index($\"tone\", \",\", 1)).\n    withColumn(\"annee\", substring($\"dategkg\", 0, 4)).\n    withColumn(\"mois\", substring($\"dategkg\", 5, 2)).\n    withColumn(\"jour\", substring($\"dategkg\", 7, 2)).\n    groupBy(\"sourcecommonname\", \"annee\", \"mois\", \"jour\",\"locationpays\").   \n    agg(count($\"mentionid\").alias(\"num_article\"),     \n        mean($\"tone\").alias(\"avg_tone\")).\n        na.drop()\n        \n// gkg_q3_location.write.mode(SaveMode.Overwrite).parquet(DIR_Parquet + \"gkg_q3_location.parquet\") // backup en parquet\n// val gkg_q3_location_parquet = spark.read.parquet(DIR_Parquet + \"gkg_q3_location.parquet\") // rechargement parquet backup","user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"gkg_q3_location: org.apache.spark.sql.DataFrame = [sourcecommonname: string, annee: string ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1611699877673_190166400","id":"20210116-232425_1200890152","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:425"},{"text":"CassandraConnector(sc.getConf).withSessionDo { session =>\n//session.execute(\"DROP KEYSPACE gdelt\")\n// session.execute(\"DROP TABLE gdelt.table_q3_lieu\")\nsession.execute(\"CREATE KEYSPACE IF NOT EXISTS gdelt WITH REPLICATION = {'class': 'SimpleStrategy', 'replication_factor': 3 }\")\nsession.execute(\"CREATE TABLE IF NOT EXISTS gdelt.table_q3_lieu(sourcecommonname text, annee int, mois int, jour int, locationpays text, num_article int, avg_tone double,PRIMARY KEY (sourcecommonname, annee, mois, jour,locationpays))\")\n}\n\n// gkg_q3_location_parquet.write.cassandraFormat(\"table_q3_lieu\",\"gdelt\").mode(SaveMode.Append).save()\ngkg_q3_location.write.cassandraFormat(\"table_q3_lieu\",\"gdelt\").mode(SaveMode.Append).save()","user":"anonymous","dateUpdated":"2021-01-26T22:31:39+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"msg":[{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1611699877675_1956583944","id":"20210116-233553_320548416","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:426"},{"text":"// val reload_query3_lieu = spark.read.\n//       cassandraFormat(\"table_q3_lieu\",\"gdelt\").\n//       load()\n      \n// reload_query3_lieu.count\n      \n// reload_query3_lieu.createOrReplaceTempView(\"vue_q3_lieu\")\n","user":"anonymous","dateUpdated":"2021-01-26T22:31:51+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dfreload_q3_lieux: org.apache.spark.sql.DataFrame = [sourcecommonname: string, annee: int ... 5 more fields]\nres171: Long = 279439\n"}]},"apps":[],"jobName":"paragraph_1611699877677_2011080821","id":"20210118-200244_1223186144","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:427"},{"user":"anonymous","dateUpdated":"2021-01-26T22:24:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611699877679_-1999178870","id":"20210121-104759_1533596663","dateCreated":"2021-01-26T22:24:37+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:428"}],"name":"GDELT_aws_final","id":"2FX2W8286","noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}